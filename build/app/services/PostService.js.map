{"version":3,"sources":["../../../src/app/services/PostService.js"],"names":["newPost","data","data_to_insert","title","body","heading","images","to_expire_date","to_expire_time","to_start_date","to_start_time","id","deal_id","Post","query","insert","e","console","log","post","CokitchenHomePagePost","where","cokitchen_id","cokitchen_home_page_post","posts","push","JSON","stringify","patchAndFetchById","adata"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEA;;AAEO,IAAMA,OAAO;AAAA,2FAAG,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,YAAAA,cADiB,GACA;AACnBC,cAAAA,KAAK,EAAEF,IAAI,CAACE,KADO;AAEnBC,cAAAA,IAAI,EAAEH,IAAI,CAACG,IAFQ;AAGnBC,cAAAA,OAAO,EAAEJ,IAAI,CAACI,OAHK;AAInBC,cAAAA,MAAM,EAAEL,IAAI,CAACK,MAJM;AAKnBC,cAAAA,cAAc,EAAEN,IAAI,CAACM,cALF;AAMnBC,cAAAA,cAAc,EAAEP,IAAI,CAACO,cANF;AAOnBC,cAAAA,aAAa,EAAER,IAAI,CAACQ,aAPD;AAQnBC,cAAAA,aAAa,EAAET,IAAI,CAACS;AARD,aADA;;AAWrB,gBAAIT,IAAI,CAACU,EAAT,EAAa;AACXT,cAAAA,cAAc,CAACU,OAAf,GAAyBX,IAAI,CAACU,EAA9B;AACD;;AAboB;AAAA,mBAcFE,kBAAKC,KAAL,GAChBC,MADgB,CACTb,cADS,WAEV,UAAAc,CAAC,EAAI;AACVC,cAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,oBAAM,kCAAoB,mBAApB,CAAN;AACD,aALgB,CAdE;;AAAA;AAcfG,YAAAA,IAde;AAAA;AAAA,mBAqBgBC,qCAAsBN,KAAtB,GAClCO,KADkC,CAC5BpB,IAAI,CAACqB,YADuB,EACTrB,IAAI,CAACqB,YADI,WAE5B,UAAAN,CAAC,EAAI;AACVC,cAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,qBAAO,KAAP;AACD,aALkC,CArBhB;;AAAA;AAqBjBO,YAAAA,wBArBiB;;AAAA,iBA4BjBA,wBA5BiB;AAAA;AAAA;AAAA;;AA6BnBA,YAAAA,wBAAwB,CAACC,KAAzB,CAA+BC,IAA/B,CAAoCN,IAApC;AACAI,YAAAA,wBAAwB,CAACC,KAAzB,GAAiCE,IAAI,CAACC,SAAL,CAC/BJ,wBAAwB,CAACC,KADM,CAAjC;AA9BmB;AAAA,mBAiCcJ,qCAAsBN,KAAtB,GAC9Bc,iBAD8B,CACZL,wBAAwB,CAACZ,EADb,EACiBY,wBADjB,WAExB,UAAAP,CAAC,EAAI;AACVC,cAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,oBAAM,kCAAoB,uCAApB,CAAN;AACD,aAL8B,CAjCd;;AAAA;AAiCnBO,YAAAA,wBAjCmB;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAyCcH,qCAAsBN,KAAtB,GAC9BC,MAD8B,CACvB;AACNS,cAAAA,KAAK,EAAEE,IAAI,CAACC,SAAL,CAAe,CAACR,IAAD,CAAf,CADD;AAENG,cAAAA,YAAY,EAAEO,KAAK,CAACP;AAFd,aADuB,WAKxB,UAAAN,CAAC,EAAI;AACVC,cAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,oBAAM,kCACJ,8CADI,CAAN;AAGD,aAV8B,CAzCd;;AAAA;AAyCnBO,YAAAA,wBAzCmB;;AAAA;AAAA,6CAsDd;AACLJ,cAAAA,IAAI,EAAJA,IADK;AAELI,cAAAA,wBAAwB,EAAxBA;AAFK,aAtDc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPvB,OAAO;AAAA;AAAA;AAAA,GAAb;;;eA4DQ;AACbA,EAAAA,OAAO,EAAPA;AADa,C","sourcesContent":["import { transaction } from 'objection'\n\nimport User from '../models/user'\nimport Post from '../models/posts'\nimport CokitchenHomePagePost from '../models/cokitchen_home_page_post'\n\nimport { Unauthorized, UnprocessableEntity } from '../helpers'\n\nexport const newPost = async data => {\n  let data_to_insert = {\n    title: data.title,\n    body: data.body,\n    heading: data.heading,\n    images: data.images,\n    to_expire_date: data.to_expire_date,\n    to_expire_time: data.to_expire_time,\n    to_start_date: data.to_start_date,\n    to_start_time: data.to_start_time\n  }\n  if (data.id) {\n    data_to_insert.deal_id = data.id\n  }\n  const post = await Post.query()\n    .insert(data_to_insert)\n    .catch(e => {\n      console.log(e)\n      throw UnprocessableEntity('Post data invalid')\n    })\n  // first check if cokitchen home page posts already exists\n  let cokitchen_home_page_post = await CokitchenHomePagePost.query()\n    .where(data.cokitchen_id, data.cokitchen_id)\n    .catch(e => {\n      console.log(e)\n      return false\n    })\n  /// if it exists add the post to the array of posts\n  if (cokitchen_home_page_post) {\n    cokitchen_home_page_post.posts.push(post)\n    cokitchen_home_page_post.posts = JSON.stringify(\n      cokitchen_home_page_post.posts\n    )\n    cokitchen_home_page_post = await CokitchenHomePagePost.query()\n      .patchAndFetchById(cokitchen_home_page_post.id, cokitchen_home_page_post)\n      .catch(e => {\n        console.log(e)\n        throw UnprocessableEntity('Invalid Cokitchen Home page post data')\n      })\n    //if it doesn't exists create the cokitchen home page post\n  } else {\n    cokitchen_home_page_post = await CokitchenHomePagePost.query()\n      .insert({\n        posts: JSON.stringify([post]),\n        cokitchen_id: adata.cokitchen_id\n      })\n      .catch(e => {\n        console.log(e)\n        throw UnprocessableEntity(\n          'Invalid Insert Cokitchen Home page post data'\n        )\n      })\n  }\n\n  return {\n    post,\n    cokitchen_home_page_post\n  }\n}\n\nexport default {\n  newPost\n}\n"],"file":"PostService.js"}