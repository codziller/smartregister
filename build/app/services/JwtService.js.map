{"version":3,"sources":["../../../src/app/services/JwtService.js"],"names":["require","JWT_SECRET","EXPIRE_TIME","JwtService","data","Jwt","sign","expiresIn","token","response","status","message","decoded","otp","verify","err","console","log"],"mappings":";;;;;;;;;;;;;AAAA;;eAEoCA,OAAO,a;IAAnCC,U,YAAAA,U;IAAYC,W,YAAAA,W;;IAECC,U;;;;;;;WACnB,cAAYC,IAAZ,EAAkB;AAChB,aAAOC,yBAAIC,IAAJ,CAASF,IAAT,EAAeH,UAAf,EAA2B;AAAEM,QAAAA,SAAS,EAAEL;AAAb,OAA3B,CAAP;AACD;;;WAED,gBAAcM,KAAd,EAAqB;AACnB,UAAMC,QAAQ,GAAG;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,OAAO,EAAE,SAA1B;AAAqCC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP;AAA9C,OAAjB;;AAEAR,+BAAIS,MAAJ,CAAWN,KAAX,EAAkBP,UAAlB,EAA8B,UAACc,GAAD,EAAMH,OAAN,EAAkB;AAC9C,YAAIG,GAAJ,EAAS;AACPC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAN,UAAAA,QAAQ,CAACC,MAAT,GAAkB,KAAlB;;AAEA,cAAIK,GAAG,CAACJ,OAAJ,KAAgB,aAApB,EAAmC;AACjCF,YAAAA,QAAQ,CAACE,OAAT,GAAmB,SAAnB;AACD;;AAED,iBAAOF,QAAP;AACD;;AACDA,QAAAA,QAAQ,CAACG,OAAT,GAAmBA,OAAnB;AACAH,QAAAA,QAAQ,CAACC,MAAT,GAAkB,IAAlB;AACAD,QAAAA,QAAQ,CAACE,OAAT,GAAmB,OAAnB;AACA,eAAOF,QAAP;AACD,OAfD;;AAiBA,aAAOA,QAAP;AACD","sourcesContent":["import Jwt from 'jsonwebtoken'\n\nconst { JWT_SECRET, EXPIRE_TIME } = require('../config')\n\nexport default class JwtService {\n  static sign(data) {\n    return Jwt.sign(data, JWT_SECRET, { expiresIn: EXPIRE_TIME })\n  }\n\n  static verify(token) {\n    const response = { status: false, message: 'invalid', decoded: { otp: '' } }\n\n    Jwt.verify(token, JWT_SECRET, (err, decoded) => {\n      if (err) {\n        console.log(err)\n        response.status = false\n\n        if (err.message === 'jwt expired') {\n          response.message = 'expired'\n        }\n\n        return response\n      }\n      response.decoded = decoded\n      response.status = true\n      response.message = 'valid'\n      return response\n    })\n\n    return response\n  }\n}\n"],"file":"JwtService.js"}