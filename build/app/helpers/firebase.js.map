{"version":3,"sources":["../../../src/app/helpers/firebase.js"],"names":["fadmin","initializeApp","credential","cert","serviceAccount","db","firestore","pendingOrdersDb","collection","trackingOrdersDb","setPendingOrder","order","new_pending_order","doc","id","console","log","set","JSON","parse","stringify","deletePendingOrder","setTrackingOrder","data","new_tracking_order","get","then","thisDoc","exists","update"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEAA,0BAAOC,aAAP,CAAqB;AACnBC,EAAAA,UAAU,EAAEF,0BAAOE,UAAP,CAAkBC,IAAlB,CAAuBC,uCAAvB;AADO,CAArB;;AAIA,IAAMC,EAAE,GAAGL,0BAAOM,SAAP,EAAX;;AAEA,IAAMC,eAAe,GAAGF,EAAE,CAACG,UAAH,CAAc,gBAAd,CAAxB;AAEA,IAAMC,gBAAgB,GAAGJ,EAAE,CAACG,UAAH,CAAc,iBAAd,CAAzB;;AAEO,IAAME,eAAe;AAAA,2FAAG,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,YAAAA,iBADuB,GACHL,eAAe,CAACM,GAAhB,CAAoBF,KAAK,CAACG,EAA1B,CADG;AAE7BC,YAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAF6B;AAAA,mBAGvBC,iBAAiB,CAACK,GAAlB,CAAsBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeT,KAAf,CAAX,CAAtB,CAHuB;;AAAA;AAAA,6CAItB,IAJsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfD,eAAe;AAAA;AAAA;AAAA,GAArB;;;;AAOA,IAAMW,kBAAkB;AAAA,4FAAG,kBAAMV,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,YAAAA,iBAD0B,GACNL,eAAe,CAACM,GAAhB,CAAoBF,KAAK,CAACG,EAA1B,CADM;AAEhCC,YAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAFgC;AAAA,mBAG1BC,iBAAiB,UAAjB,EAH0B;;AAAA;AAAA,8CAIzB,IAJyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBS,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;;;AAOA,IAAMC,gBAAgB;AAAA,4FAAG,kBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,YAAAA,kBADwB,GACHf,gBAAgB,CAACI,GAAjB,CAAqBU,IAAI,CAACT,EAA1B,CADG;AAE9BU,YAAAA,kBAAkB,CAACC,GAAnB,GAAyBC,IAAzB;AAAA,wGAA8B,kBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,6BACxBA,OAAO,CAACC,MADgB;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAEpBJ,kBAAkB,CAACK,MAAnB,CAA0BX,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeG,IAAf,CAAX,CAA1B,CAFoB;;AAAA;AAAA;AAAA;;AAAA;AAI1BR,wBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAJ0B;AAAA,+BAKpBQ,kBAAkB,CAACP,GAAnB,CAAuBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeG,IAAf,CAAX,CAAvB,CALoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA9B;;AAAA;AAAA;AAAA;AAAA;AAF8B,8CAUvB,IAVuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBD,gBAAgB;AAAA;AAAA;AAAA,GAAtB","sourcesContent":["import fadmin from 'firebase-admin'\nimport path from 'path'\nimport serviceAccount from './cokitchen-312312-d3cc6d60550e.json'\n\nfadmin.initializeApp({\n  credential: fadmin.credential.cert(serviceAccount)\n})\n\nconst db = fadmin.firestore()\n\nconst pendingOrdersDb = db.collection('pending_orders')\n\nconst trackingOrdersDb = db.collection('tracking_orders')\n\nexport const setPendingOrder = async order => {\n  const new_pending_order = pendingOrdersDb.doc(order.id)\n  console.log(order)\n  await new_pending_order.set(JSON.parse(JSON.stringify(order)))\n  return true\n}\n\nexport const deletePendingOrder = async order => {\n  const new_pending_order = pendingOrdersDb.doc(order.id)\n  console.log(order)\n  await new_pending_order.delete()\n  return true\n}\n\nexport const setTrackingOrder = async data => {\n  const new_tracking_order = trackingOrdersDb.doc(data.id)\n  new_tracking_order.get().then(async function (thisDoc) {\n    if (thisDoc.exists) {\n      await new_tracking_order.update(JSON.parse(JSON.stringify(data)))\n    } else {\n      console.log('not exists')\n      await new_tracking_order.set(JSON.parse(JSON.stringify(data)))\n    }\n  })\n  return true\n}\n"],"file":"firebase.js"}