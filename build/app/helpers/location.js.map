{"version":3,"sources":["../../../src/app/helpers/location.js"],"names":["getLatLonDiffInMeters","lat1","lon1","lat2","lon2","deg2rad","deg","Math","PI","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","d","insidePolygon","point","vs","x","y","inside","i","j","length","xi","yi","xj","yj","intersect"],"mappings":";;;;;;;AAAO,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB,EAA4B;AAC/D,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,GAAG,EAAI;AACrB,WAAOA,GAAG,IAAIC,IAAI,CAACC,EAAL,GAAU,GAAd,CAAV;AACD,GAFD;;AAGA,MAAIC,CAAC,GAAG,IAAR,CAJ+D,CAIlD;;AACb,MAAIC,IAAI,GAAGL,OAAO,CAACF,IAAI,GAAGF,IAAR,CAAlB,CAL+D,CAK/B;;AAChC,MAAIU,IAAI,GAAGN,OAAO,CAACD,IAAI,GAAGF,IAAR,CAAlB;AACA,MAAIU,CAAC,GACHL,IAAI,CAACM,GAAL,CAASH,IAAI,GAAG,CAAhB,IAAqBH,IAAI,CAACM,GAAL,CAASH,IAAI,GAAG,CAAhB,CAArB,GACAH,IAAI,CAACO,GAAL,CAAST,OAAO,CAACJ,IAAD,CAAhB,IACEM,IAAI,CAACO,GAAL,CAAST,OAAO,CAACF,IAAD,CAAhB,CADF,GAEEI,IAAI,CAACM,GAAL,CAASF,IAAI,GAAG,CAAhB,CAFF,GAGEJ,IAAI,CAACM,GAAL,CAASF,IAAI,GAAG,CAAhB,CALJ;AAMA,MAAII,CAAC,GAAG,IAAIR,IAAI,CAACS,KAAL,CAAWT,IAAI,CAACU,IAAL,CAAUL,CAAV,CAAX,EAAyBL,IAAI,CAACU,IAAL,CAAU,IAAIL,CAAd,CAAzB,CAAZ;AACA,MAAIM,CAAC,GAAGT,CAAC,GAAGM,CAAZ,CAd+D,CAcjD;;AACd,SAAOG,CAAC,GAAG,IAAX;AACD,CAhBM;;;;AAkBA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,EAAR,EAAe;AAC1C;AACA;AAEA,MAAIC,CAAC,GAAGF,KAAK,CAAC,CAAD,CAAb;AAAA,MACEG,CAAC,GAAGH,KAAK,CAAC,CAAD,CADX;AAGA,MAAII,MAAM,GAAG,KAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGL,EAAE,CAACM,MAAH,GAAY,CAAhC,EAAmCF,CAAC,GAAGJ,EAAE,CAACM,MAA1C,EAAkDD,CAAC,GAAGD,CAAC,EAAvD,EAA2D;AACzD,QAAIG,EAAE,GAAGP,EAAE,CAACI,CAAD,CAAF,CAAM,CAAN,CAAT;AAAA,QACEI,EAAE,GAAGR,EAAE,CAACI,CAAD,CAAF,CAAM,CAAN,CADP;AAEA,QAAIK,EAAE,GAAGT,EAAE,CAACK,CAAD,CAAF,CAAM,CAAN,CAAT;AAAA,QACEK,EAAE,GAAGV,EAAE,CAACK,CAAD,CAAF,CAAM,CAAN,CADP;AAGA,QAAIM,SAAS,GACXH,EAAE,GAAGN,CAAL,IAAUQ,EAAE,GAAGR,CAAf,IAAoBD,CAAC,GAAI,CAACQ,EAAE,GAAGF,EAAN,KAAaL,CAAC,GAAGM,EAAjB,CAAD,IAA0BE,EAAE,GAAGF,EAA/B,IAAqCD,EAD/D;AAEA,QAAII,SAAJ,EAAeR,MAAM,GAAG,CAACA,MAAV;AAChB;;AAED,SAAOA,MAAP;AACD,CApBM","sourcesContent":["export const getLatLonDiffInMeters = (lat1, lon1, lat2, lon2) => {\n  const deg2rad = deg => {\n    return deg * (Math.PI / 180)\n  }\n  var R = 6371 // radius of the earth in km\n  var dLat = deg2rad(lat2 - lat1) // deg2rad below\n  var dLon = deg2rad(lon2 - lon1)\n  var a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) *\n      Math.cos(deg2rad(lat2)) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2)\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n  var d = R * c // distance in km\n  return d * 1000\n}\n\nexport const insidePolygon = (point, vs) => {\n  // ray-casting algorithm based on\n  // https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html/pnpoly.html\n\n  var x = point[0],\n    y = point[1]\n\n  var inside = false\n  for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n    var xi = vs[i][0],\n      yi = vs[i][1]\n    var xj = vs[j][0],\n      yj = vs[j][1]\n\n    var intersect =\n      yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi\n    if (intersect) inside = !inside\n  }\n\n  return inside\n}\n"],"file":"location.js"}