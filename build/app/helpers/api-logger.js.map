{"version":3,"sources":["../../../src/app/helpers/api-logger.js"],"names":["ApiLogger","third_party_details","third_party","third_party_config","third_party_action","third_party_personal_details","status","ApiLogs","query","insert","info","type","api_data","metaData","details","successful","JSON","stringify","config","action","personal_details","success"],"mappings":";;;;;;;;;;;;;AAAA;;AAEO,IAAMA,SAAS;AAAA,2FAAG,iBACvBC,mBADuB,EAEvBC,WAFuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGvBC,YAAAA,kBAHuB,2DAGF,EAHE;AAIvBC,YAAAA,kBAJuB,2DAIF,EAJE;AAKvBC,YAAAA,4BALuB,2DAKQ,EALR;;AAAA,kBAOnBJ,mBAAmB,CAACK,MAApB,KAA+B,GAA/B,IAAsCL,mBAAmB,CAACK,MAPvC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAQfC,oBAAQC,KAAR,GAAgBC,MAAhB,CAAuB;AAC3BC,cAAAA,IAAI,yCAAkCR,WAAlC,CADuB;AAE3BS,cAAAA,IAAI,EAAET,WAFqB;AAG3BU,cAAAA,QAAQ,EAAEX,mBAAmB,CAACY,QAApB,CAA6BC,OAHZ;AAI3BC,cAAAA,UAAU,EAAEd,mBAAmB,CAACK,MAApB,KAA+B;AAJhB,aAAvB,CARe;;AAAA;AAAA;;AAAA;AAAA,kBAiBnBJ,WAAW,KAAK,QAjBG;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAkBfK,oBAAQC,KAAR,GAAgBC,MAAhB,CAAuB;AAC3BC,cAAAA,IAAI,yCAAkCR,WAAlC,CADuB;AAE3BS,cAAAA,IAAI,EAAET,WAFqB;AAG3BU,cAAAA,QAAQ,EAAEI,IAAI,CAACC,SAAL,CAAehB,mBAAf,CAHiB;AAI3BiB,cAAAA,MAAM,EAAEF,IAAI,CAACC,SAAL,CAAed,kBAAf,CAJmB;AAK3BgB,cAAAA,MAAM,EAAEf,kBALmB;AAM3BgB,cAAAA,gBAAgB,EAAEf,4BANS;AAO3BU,cAAAA,UAAU,EAAEd,mBAAmB,CAACoB;AAPL,aAAvB,CAlBe;;AAAA;AAAA;;AAAA;AAAA;AAAA,mBA8BjBd,oBAAQC,KAAR,GAAgBC,MAAhB,CAAuB;AAC3BC,cAAAA,IAAI,yCAAkCR,WAAlC,CADuB;AAE3BS,cAAAA,IAAI,EAAET,WAFqB;AAG3BU,cAAAA,QAAQ,EAAEI,IAAI,CAACC,SAAL,CAAehB,mBAAf,CAHiB;AAI3Bc,cAAAA,UAAU,EAAEd,mBAAmB,CAACK;AAJL,aAAvB,CA9BiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATN,SAAS;AAAA;AAAA;AAAA,GAAf","sourcesContent":["import ApiLogs from '../models/api_log.js'\n\nexport const ApiLogger = async (\n  third_party_details,\n  third_party,\n  third_party_config = {},\n  third_party_action = '',\n  third_party_personal_details = {}\n) => {\n  if (third_party_details.status === 200 || third_party_details.status) {\n    await ApiLogs.query().insert({\n      info: `Third party api call log for ${third_party}`,\n      type: third_party,\n      api_data: third_party_details.metaData.details,\n      successful: third_party_details.status === 200\n    })\n    return\n  }\n\n  if (third_party === 'POSIST') {\n    await ApiLogs.query().insert({\n      info: `Third party api call log for ${third_party}`,\n      type: third_party,\n      api_data: JSON.stringify(third_party_details),\n      config: JSON.stringify(third_party_config),\n      action: third_party_action,\n      personal_details: third_party_personal_details,\n      successful: third_party_details.success\n    })\n    return\n  }\n\n  await ApiLogs.query().insert({\n    info: `Third party api call log for ${third_party}`,\n    type: third_party,\n    api_data: JSON.stringify(third_party_details),\n    successful: third_party_details.status\n  })\n}\n"],"file":"api-logger.js"}