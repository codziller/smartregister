{"version":3,"sources":["../../../src/app/helpers/file.js"],"names":["global","XMLHttpRequest","xhr2","fileToBlob","file","Promise","resolve","reject","fs","readFile","path","err","data","unlinkSync","nameToUrl","filename","split","name","slice","length","join","Date","now","writeFile","on","saveFileTo","dir","prefix","newFileName","newPath","process","cwd","size","type","mtime","lastModifiedDate","readFileFrom","stream","options","filepath","createReadStream","deleteFile","unlink","console","log","createTempFileStorage","dirname","__dirname","existsSync","mkdirSync"],"mappings":"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","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport mv from 'mv'\nimport xhr2 from 'xhr2'\n\nglobal.XMLHttpRequest = xhr2\n\nexport const fileToBlob = file =>\n  new Promise((resolve, reject) => {\n    fs.readFile(file.path, (err, data) => {\n      if (err) {\n        reject(err)\n      }\n      fs.unlinkSync(file.path)\n      resolve(data)\n    })\n  })\n\nexport const nameToUrl = filename => {\n  const split = filename.split('.')\n  const name = split.slice(0, split.length - 1).join('.')\n\n  return `${name}_${Date.now()}.${split[split.length - 1]}`\n}\n\nexport const writeFile = file =>\n  new Promise((resolve, reject) => {\n    file.on('error', err => reject(err)).on('finish', () => resolve(file))\n  })\n\nexport const saveFileTo = ({ file, dir = 'files', prefix = '' }) => {\n  return new Promise((resolve, reject) => {\n    const newFileName = prefix.length\n      ? `${prefix}.${file.name}`\n      : `${file.name}`\n    const newPath = `${process.cwd()}/src/${dir}/${newFileName}`\n    mv(file.path, newPath, err => {\n      if (err) {\n        reject(err)\n      }\n      resolve({\n        size: file.size,\n        path: newPath,\n        name: newFileName,\n        type: file.type,\n        mtime: file.lastModifiedDate\n      })\n    })\n  })\n}\n\nexport const readFileFrom = ({\n  file,\n  dir = 'files',\n  stream = false,\n  options = {}\n}) => {\n  return new Promise((resolve, reject) => {\n    const filepath = `${process.cwd()}/src/${dir}/${file}`\n    if (stream) {\n      resolve(fs.createReadStream(filepath, options))\n    } else {\n      fs.readFile(filepath, options, (err, data) => {\n        if (err) {\n          reject(err)\n        }\n        resolve(data)\n      })\n    }\n  })\n}\n\nexport const deleteFile = ({ file, dir = 'files' }) => {\n  return new Promise((resolve, reject) => {\n    const filepath = `${process.cwd()}/src/${dir}/${file}`\n    fs.unlink(filepath, (err, data) => {\n      if (err) {\n        reject(err)\n      }\n      console.log(file, 'deleted from ', dir)\n      resolve(data)\n    })\n  })\n}\n\nexport const createTempFileStorage = ({ dirname }) => {\n  const dir = `${path.dirname(__dirname)}/${dirname}`\n\n  if (!fs.existsSync(dir)) {\n    fs.mkdirSync(dir)\n  }\n}\n"],"file":"file.js"}