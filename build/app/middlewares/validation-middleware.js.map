{"version":3,"sources":["../../../src/app/middlewares/validation-middleware.js"],"names":["validateObject","object","label","schema","options","Joi","validate","error","value","Error","message","replace","validationMiddleware","validationObj","ctx","next","headers","allowUnknown","params","query","request","body","files","err"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,GAAyC;AAAA,MAAxCC,MAAwC,uEAA/B,EAA+B;AAAA,MAA3BC,KAA2B;AAAA,MAApBC,MAAoB;AAAA,MAAZC,OAAY;;AAC9D,MAAID,MAAJ,EAAY;AAAA,+BACeE,gBAAIJ,MAAJ,CAAWE,MAAX,EAAmBG,QAAnB,CAA4BL,MAA5B,EAAoCG,OAApC,CADf;AAAA,QACFG,KADE,wBACFA,KADE;AAAA,QACKC,KADL,wBACKA,KADL;;AAEV,QAAID,KAAJ,EAAW;AACT,YAAM,IAAIE,KAAJ,WAAaF,KAAK,CAACG,OAAN,CAAcC,OAAd,CAAsB,IAAtB,EAA4B,EAA5B,CAAb,EAAN;AACD;AACF;AACF,CAPD;;AASO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,aAAa;AAAA,SAAI,UAACC,GAAD,EAAMC,IAAN,EAAe;AAClE,QAAI;AACFf,MAAAA,cAAc,CAACc,GAAG,CAACE,OAAL,EAAc,SAAd,EAAyBH,aAAa,CAACG,OAAvC,EAAgD;AAC5DC,QAAAA,YAAY,EAAE;AAD8C,OAAhD,CAAd;AAGAjB,MAAAA,cAAc,CAACc,GAAG,CAACI,MAAL,EAAa,gBAAb,EAA+BL,aAAa,CAACK,MAA7C,CAAd;AACAlB,MAAAA,cAAc,CAACc,GAAG,CAACK,KAAL,EAAY,WAAZ,EAAyBN,aAAa,CAACM,KAAvC,CAAd;;AAEA,UAAIL,GAAG,CAACM,OAAJ,CAAYC,IAAhB,EAAsB;AACpBrB,QAAAA,cAAc,CAACc,GAAG,CAACM,OAAJ,CAAYC,IAAb,EAAmB,cAAnB,EAAmCR,aAAa,CAACQ,IAAjD,CAAd;AACD;;AAED,UAAIP,GAAG,CAACM,OAAJ,CAAYE,KAAhB,EAAuB;AACrBtB,QAAAA,cAAc,CAACc,GAAG,CAACM,OAAJ,CAAYE,KAAb,EAAoB,eAApB,EAAqCT,aAAa,CAACS,KAAnD,CAAd;AACD;;AAED,aAAOP,IAAI,EAAX;AACD,KAhBD,CAgBE,OAAOQ,GAAP,EAAY;AACZ,YAAM,yBAAWA,GAAG,CAACb,OAAf,CAAN;AACD;AACF,GApBgD;AAAA,CAA1C","sourcesContent":["import Joi from '@hapi/joi'\n\nimport { BadRequest } from '../helpers'\n\nconst validateObject = (object = {}, label, schema, options) => {\n  if (schema) {\n    const { error, value } = Joi.object(schema).validate(object, options)\n    if (error) {\n      throw new Error(`${error.message.replace(/\"/g, '')}`)\n    }\n  }\n}\n\nexport const validationMiddleware = validationObj => (ctx, next) => {\n  try {\n    validateObject(ctx.headers, 'Headers', validationObj.headers, {\n      allowUnknown: true\n    })\n    validateObject(ctx.params, 'URL Parameters', validationObj.params)\n    validateObject(ctx.query, 'URL Query', validationObj.query)\n\n    if (ctx.request.body) {\n      validateObject(ctx.request.body, 'Request Body', validationObj.body)\n    }\n\n    if (ctx.request.files) {\n      validateObject(ctx.request.files, 'Request Files', validationObj.files)\n    }\n\n    return next()\n  } catch (err) {\n    throw BadRequest(err.message)\n  }\n}\n"],"file":"validation-middleware.js"}