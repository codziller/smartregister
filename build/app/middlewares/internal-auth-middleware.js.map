{"version":3,"sources":["../../../src/app/middlewares/internal-auth-middleware.js"],"names":["internalRoutes","url","method","isAnInternalRouteToCheck","request","find","item","includes","internalAuthentication","next","requestKeyValue","headers","ApiKey","query","findOne","key","value","active"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,cAAc,GAAG,CAAC;AAAEC,EAAAA,GAAG,EAAE,cAAP;AAAuBC,EAAAA,MAAM,EAAE;AAA/B,CAAD,CAAvB;;AAEA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAAC,OAAO,EAAI;AAC1C,SAAOJ,cAAc,CAACK,IAAf,CACL,UAAAC,IAAI;AAAA,WAAIF,OAAO,CAACH,GAAR,CAAYM,QAAZ,CAAqBD,IAAI,CAACL,GAA1B,CAAJ;AAAA,GADC,CAEL;AAFK,GAAP;AAID,CALD;;AAOO,IAAMO,sBAAsB;AAAA,4FAAG,uBAAoBC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASL,YAAAA,OAAT,QAASA,OAAT;AAC9BM,YAAAA,eAD8B,GACZN,OAAO,CAACO,OAAR,CAAgB,WAAhB,CADY;;AAAA,kBAGhCD,eAAe,IAAIP,wBAAwB,CAACC,OAAD,CAHX;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAI5BQ,oBAAOC,KAAP,GACHC,OADG,CACK;AACPC,cAAAA,GAAG,EAAE,SADE;AAEPC,cAAAA,KAAK,EAAEN,eAFA;AAGPO,cAAAA,MAAM,EAAE;AAHD,aADL,WAMG,YAAM;AACX,oBAAM,2BAAa,gCAAb,CAAN;AACD,aARG,CAJ4B;;AAAA;AAAA,6CAe7BR,IAAI,EAfyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtBD,sBAAsB;AAAA;AAAA;AAAA,GAA5B","sourcesContent":["import { Unauthorized } from '../helpers'\nimport ApiKey from '../models/api_key'\n\nconst internalRoutes = [{ url: '/v1/internal', method: 'GET' }]\n\nconst isAnInternalRouteToCheck = request => {\n  return internalRoutes.find(\n    item => request.url.includes(item.url)\n    // && item.method === request.method\n  )\n}\n\nexport const internalAuthentication = async ({ request }, next) => {\n  const requestKeyValue = request.headers['x-api-key']\n\n  if (requestKeyValue || isAnInternalRouteToCheck(request)) {\n    await ApiKey.query()\n      .findOne({\n        key: 'APP_KEY',\n        value: requestKeyValue,\n        active: true\n      })\n      .catch(() => {\n        throw Unauthorized('Please provide a valid app key')\n      })\n  }\n\n  return next()\n}\n"],"file":"internal-auth-middleware.js"}