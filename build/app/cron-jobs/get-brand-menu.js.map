{"version":3,"sources":["../../../src/app/cron-jobs/get-brand-menu.js"],"names":["jobEnvironment","development","production","job","schedule","scheduleJob","NODE_ENV","console","log","Brand","query","e","brands","MealCategorySelectionType","meal_category_selection_types","i","length","posist_data","customer_key","response","data","menu_data","j","category_data","category","super_meal_category","superCategory","SuperMealCategory","_id","where","castText","superMealCategoryToCreate","patchAndFetchById","id","name","superCategoryName","insert","MealCategory","mealCategoryToCreate","categoryName","super_meal_category_id","meal_category_selection_type_id","Meal","mealToCreate","meal_category_id","amount","rate","toString","is_addon","isAddOn","is_combo","isCombo","brand_id","preparation_time","preparationTime","time","mapItems","k","mealsAddonToCreate","addon","Addon","findOne","meal_addon_id","meal_id"],"mappings":"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","sourcesContent":["import schedule from 'node-schedule'\nimport Brand from '../models/brand'\nimport MealCategory from '../models/meal_category'\nimport SuperMealCategory from '../models/supermeal_category'\nimport Meal from '../models/meal'\nimport Addon from '../models/addons'\nimport MealCategorySelectionType from '../models/meal_category_selection_type'\nimport { NODE_ENV } from '../config'\nimport { getPosistBrandMenu } from '../helpers'\nimport { ref } from 'objection'\n\nconst jobEnvironment = {\n  development: '*/3 * * * *',\n  production: '*/3 * * * *'\n}\n\nconst job = schedule.scheduleJob(jobEnvironment[NODE_ENV], async () => {\n  console.log('Task: Updating BRAND MENU')\n  const brands = await Brand.query().catch(e => [])\n  const meal_category_selection_types = await MealCategorySelectionType.query().catch(\n    e => []\n  )\n  for (let i = 0; i < brands.length; i++) {\n    const response = await getPosistBrandMenu(\n      brands[i].posist_data.customer_key\n    )\n    // console.log(response.data)\n\n    if (!response.data) {\n     console.log(response)\n    } else {\n      //loop through response data\n      const menu_data = response.data\n      for (let j = 0; j < menu_data.length; j++) {\n        // first check if category exists\n        let category_data = menu_data[j].category\n        let super_meal_category = category_data.superCategory\n        // check if super meal category exists, if not create it\n        console.log(await SuperMealCategory.query().catch(e => []))\n        console.log(super_meal_category._id)\n        let superMealCategoryToCreate = await SuperMealCategory.query()\n          // .findOne({\n          //   'posist_data:_id': super_meal_category._id\n          // })\n          .where(\n            ref('super_meal_categories.posist_data:_id').castText(),\n            super_meal_category._id\n          )\n          .catch(e => [])\n        console.log(superMealCategoryToCreate)\n        superMealCategoryToCreate =\n          superMealCategoryToCreate.length > 0\n            ? superMealCategoryToCreate[0]\n            : false\n        if (superMealCategoryToCreate) {\n          superMealCategoryToCreate = await SuperMealCategory.query()\n            .patchAndFetchById(superMealCategoryToCreate.id, {\n              name: super_meal_category.superCategoryName,\n              posist_data: super_meal_category\n            })\n            .catch(e => console.log(e))\n        } else {\n          superMealCategoryToCreate = await SuperMealCategory.query()\n            .insert({\n              posist_data: super_meal_category,\n              name: super_meal_category.superCategoryName\n            })\n            .catch(e => console.log(e))\n        }\n        //do the same for the meal category\n        let mealCategoryToCreate = await MealCategory.query()\n          // .findOne({\n          //   'posist_data:_id': category_data._id\n          // })\n          .where(\n            ref('meal_categories.posist_data:_id').castText(),\n            category_data._id\n          )\n\n          .catch(() => [])\n        console.log(mealCategoryToCreate)\n        mealCategoryToCreate =\n          mealCategoryToCreate.length > 0 ? mealCategoryToCreate[0] : false\n\n        if (mealCategoryToCreate) {\n          mealCategoryToCreate = await MealCategory.query()\n            .patchAndFetchById(mealCategoryToCreate.id, {\n              name: category_data.categoryName,\n              super_meal_category_id: superMealCategoryToCreate.id,\n              posist_data: category_data\n            })\n            .catch(e => console.log(e))\n        } else {\n          mealCategoryToCreate = await MealCategory.query()\n            .insert({\n              posist_data: category_data,\n              name: category_data.categoryName,\n              super_meal_category_id: superMealCategoryToCreate.id,\n              meal_category_selection_type_id:\n                meal_category_selection_types[0].id // set default meal category selection type\n            })\n            .catch(e => console.log(e))\n        }\n        //create or update the meal details\n        let mealToCreate = await Meal.query()\n          // .findOne({\n          //   'posist_data:_id': menu_data[j]._id\n          // })\n          .where(ref('meals.posist_data:_id').castText(), menu_data[j]._id)\n\n          .catch(() => [])\n        console.log(mealToCreate)\n        mealToCreate = mealToCreate.length > 0 ? mealToCreate[0] : false\n\n        if (mealToCreate) {\n          mealToCreate = await Meal.query()\n            .patchAndFetchById(mealToCreate.id, {\n              name: menu_data[j].name,\n              meal_category_id: mealCategoryToCreate.id,\n              posist_data: menu_data[j],\n              amount: menu_data[j].rate.toString(),\n              is_addon: menu_data[j].isAddOn,\n              is_combo: menu_data[j].isCombo,\n              brand_id: brands[i].id,\n              preparation_time: menu_data[j].preparationTime.time.toString()\n            })\n            .catch(e => console.log(e))\n        } else {\n          mealToCreate = await Meal.query()\n            .insert({\n              name: menu_data[j].name,\n              meal_category_id: mealCategoryToCreate.id,\n              amount: menu_data[j].rate.toString(),\n              brand_id: brands[i].id,\n              posist_data: menu_data[j],\n              is_addon: menu_data[j].isAddOn,\n              is_combo: menu_data[j].isCombo,\n              preparation_time: menu_data[j].preparationTime.time.toString()\n            })\n            .catch(e => console.log(e))\n        }\n        // create addon if meal has addons and isaddon is false\n        if (!menu_data[j].isAddOn  && menu_data[j].mapItems &&menu_data[j].mapItems.length > 0) {\n          for (let k = 0; k < menu_data[j].mapItems.length; k++) {\n            let mealsAddonToCreate = await Meal.query()\n              // .findOne({\n              //   'posist_data:_id': menu_data[j].mapItems[k]._id\n              // })\n              .where(\n                ref('meals.posist_data:_id').castText(),\n                menu_data[j].mapItems[k]._id\n              )\n\n              .catch(() => [])\n            let addon\n            console.log(mealsAddonToCreate)\n            mealsAddonToCreate =\n              mealsAddonToCreate.length > 0 ? mealsAddonToCreate[0] : false\n\n            if (mealsAddonToCreate) {\n              addon = await Addon.query()\n                .findOne({\n                  meal_addon_id: mealsAddonToCreate.id,\n                  meal_id: mealToCreate.id\n                })\n                .catch(() => false)\n              //if addon doesn't exist\n              if (!addon) {\n                addon = await Addon.query()\n                  .insert({\n                    meal_addon_id: mealsAddonToCreate.id,\n                    meal_id: mealToCreate.id\n                  })\n                  .catch(e => console.log(e))\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n})\n\nexport default job\n"],"file":"get-brand-menu.js"}